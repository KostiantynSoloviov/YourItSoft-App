{"version":3,"sources":["components/Header/Filter.js","components/Header/Header.js","services/config.js","services/api.js","components/Cards/CardItem.js","components/Posts/PostItem.js","components/Posts/Post.js","components/Cards/Card.js","components/Preloader/Preloader.js","img/Vector.svg","components/Footer/Footer.js","App.js","index.js"],"names":["Filter","search","onChange","Input","type","name","placeholder","pattern","title","value","styled","input","Header","changeSort","filter","changeFilter","props","HeaderEl","Text","onClick","div","p","API_URL","getUserData","fetch","response","json","getUserPost","userId","CardItem","id","email","phone","website","useState","userPost","setUserPost","showPost","setShowPost","useEffect","then","data","Card","split","Button","li","button","PostItem","post","showText","setShowText","Post","Title","body","Wrap","PostsList","map","ul","firstIndex","lastIndex","users","show","setShow","handleChange","UsersWrap","ListUsers","slice","Preloader","Loader","propTypes","firstContentIndex","PropTypes","number","lastContentIndex","array","Footer","changePageNext","changePagePrev","FooterEl","className","src","Arrow","alt","style","marginRight","width","height","stroke","fill","iconname","marginLeft","transform","App","setUsers","setFilter","sort","setSort","page","setPage","loading","setLoading","count","length","pageCount","Math","ceil","changePage","direction","state","usersFiltered","normalizedFilter","toLowerCase","user","includes","filteredUsers","Body","e","num","target","a","b","localeCompare","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oOAIe,SAASA,EAAT,GAAuC,IAArBC,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,SACrC,OACI,cAACC,EAAD,CACIC,KAAK,OACLC,KAAK,SACLC,YAAY,SACZC,QAAQ,yHACRC,MAAM,yIACNC,MAAOR,EACPC,SAAUA,GAGrB,CAED,I,IAAMC,EAAQO,IAAOC,MAAV,yW,yCCZI,SAASC,EAAT,GAAiE,IAA/CC,EAA8C,EAA9CA,WAAYC,EAAkC,EAAlCA,OAAQC,EAA0B,EAA1BA,aAAiBC,EAAS,iBAC3E,OACI,eAACC,EAAD,2BAAcD,GAAd,cACI,cAACE,EAAD,CAAMC,QAASN,EAAf,mBACA,cAACb,EAAD,CAAQC,OAAQa,EAAQZ,SAAUa,OAG7C,CAED,I,IAAME,EAAWP,IAAOU,IAAV,yTAeRF,EAAOR,IAAOW,EAAV,wG,+BC9BJC,EAAU,6CCEVC,EAAW,iDAAG,8GACOC,MAAMF,GADb,cACVG,EADU,gBAEHA,EAASC,OAFN,mFAAH,qDAKXC,EAAW,iDAAG,WAAOC,GAAP,iGACOJ,MAAM,GAAD,OAAIF,EAAJ,YAAeM,EAAf,WADZ,cACVH,EADU,gBAEHA,EAASC,OAFN,mFAAH,sDCAF,SAASG,EAAT,GAOX,IANAC,EAMD,EANCA,GACAzB,EAKD,EALCA,KACA0B,EAID,EAJCA,MACAC,EAGD,EAHCA,MACAC,EAED,EAFCA,QACA/B,EACD,EADCA,SAEA,EAAgCgC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAgCF,oBAAS,GAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAEAC,qBAAU,WACNZ,EAAYG,GAAIU,MAAK,SAACC,GAAD,OAAUL,EAAYK,EAAtB,GACxB,GAAE,CAACX,IAMJ,OACI,mCACI,eAACY,EAAD,WACI,4BAAIrC,IACJ,4BAAI0B,IACJ,4BAAIC,EAAMW,MAAM,KAAK,KACrB,4BAAIV,IACJ,cAACW,EAAD,CACIxC,KAAK,SACLe,QAAS,WAZrBmB,GAAaD,GAcGnC,GAAUmC,EAAUF,EACvB,EALL,SAOKE,EAAW,aAAe,wBAK9C,CAED,I,MAAMK,EAAOhC,IAAOmC,GAAV,ulBA4BJD,EAASlC,IAAOoC,OAAV,2TCtEG,SAASC,EAAT,GAA6B,IAATC,EAAQ,EAARA,KAC/B,EAAgCd,oBAAS,GAAzC,mBAAOe,EAAP,KAAiBC,EAAjB,KACA,OACI,mCACI,eAACC,EAAD,WACI,cAACC,EAAD,CAAOjC,QAAS,kBAAM+B,GAAaD,EAAnB,EAAhB,SACKD,EAAKxC,QAETyC,EAAW,cAAC,EAAD,UAAuBD,EAAKK,MAAjBL,EAAKK,MAA2B,SAItE,CAED,I,IAAMF,EAAOzC,IAAOmC,GAAV,yVAgBJO,EAAQ1C,IAAOW,EAAV,4PAaLH,EAAOR,IAAOW,EAAV,iO,WC1CK,SAAS8B,EAAT,GAAmC,IAAnBV,EAAkB,EAAlBA,KAASzB,EAAS,iBAC7C,OACI,mCACKyB,GACG,cAACa,EAAD,UACI,cAACC,EAAD,2BAAevC,GAAf,aACKyB,EAAKe,KAAI,SAACR,GAAD,OACN,cAACD,EAAD,CAAwBC,KAAMA,GAAfA,EAAKlB,GADd,UAQjC,CAED,I,IAAMwB,EAAO5C,IAAOU,IAAV,qWAmBJmC,EAAY7C,IAAO+C,GAAV,g1BCjCA,SAASf,EAAT,GAAiD,IAAjCgB,EAAgC,EAAhCA,WAAYC,EAAoB,EAApBA,UAAWC,EAAS,EAATA,MAClD,EAAwB1B,oBAAS,GAAjC,mBAAO2B,EAAP,KAAaC,EAAb,KACA,EAAgC5B,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAEM2B,EAAe,SAAC1B,EAAUF,GAC5B2B,EAAQzB,GACRD,EAAYD,EACf,EAED,OACI,mCACKyB,GACG,eAACI,EAAD,WACI,cAACC,EAAD,UACKL,EACIM,MAAMR,EAAYC,GAClBH,KAAI,gBAAG1B,EAAH,EAAGA,GAAIzB,EAAP,EAAOA,KAAM0B,EAAb,EAAaA,MAAOC,EAApB,EAAoBA,MAAOC,EAA3B,EAA2BA,QAA3B,OACD,cAACJ,EAAD,CAEIC,GAAIA,EACJzB,KAAMA,EACN0B,MAAOA,EACPC,MAAOA,EACPC,QAASA,EACT/B,SAAU6D,GANLjC,EAFR,MAYZ+B,GAAQ,cAAC,EAAD,CAAMpB,KAAMN,QAKxC,CAED,I,EAAM6B,EAAYtD,IAAOU,IAAV,2ZAkBT6C,EAAYvD,IAAO+C,GAAV,oaC3DA,SAASU,IACpB,OAAO,cAACC,GAAD,GACV,CD8EDvC,EAASwC,UAAY,CACjBC,kBAAmBC,IAAUC,OAC7BC,iBAAkBF,IAAUC,OAC5BZ,MAAOW,IAAUG,OC/ErB,I,GAAMN,GAAS1D,IAAOU,IAAV,sbCNG,OAA0B,mCCM1B,SAASuD,GAAT,GAAqD,IAAnCC,EAAkC,EAAlCA,eAAgBC,EAAkB,EAAlBA,eAC7C,OACI,eAACC,GAAD,WACI,sBAAK3D,QAASyD,EAAgBG,UAAU,OAAxC,UACI,qBACIC,IAAKC,GACLC,IAAI,QACJC,MAAO,CAAEC,YAAa,QACtBC,MAAM,OACNC,OAAO,OACPC,OAAO,OACPC,KAAK,cACLC,SAAS,cATjB,cAcA,sBAAKtE,QAAS0D,EAAgBE,UAAU,OAAxC,iBAEI,qBACIC,IAAKC,GACLC,IAAI,QACJC,MAAO,CAAEO,WAAY,OAAQC,UAAW,mBACxCN,MAAM,OACNC,OAAO,OACPC,OAAO,OACPC,KAAK,cACLC,SAAS,mBAK5B,CAED,I,GAAMX,GAAWpE,IAAOU,IAAV,qmB,YC3BC,SAASwE,KACpB,MAA0B1D,mBAAS,IAAnC,mBAAO0B,EAAP,KAAciC,EAAd,KACA,EAA4B3D,mBAAS,IAArC,mBAAOpB,EAAP,KAAegF,EAAf,KACA,EAAwB5D,oBAAS,GAAjC,mBAAO6D,EAAP,KAAaC,EAAb,KACA,EAAwB9D,mBAAS,GAAjC,mBAAO+D,EAAP,KAAaC,EAAb,KACA,EAA8BhE,oBAAS,GAAvC,mBAAOiE,EAAP,KAAgBC,EAAhB,KAGMC,EAAQzC,EAAM0C,OAEdC,EAAYC,KAAKC,KAAKJ,EAHV,GAIZ1C,EAJY,EAIAsC,EACZvC,EAAaC,EALD,EAOZ+C,EAAa,SAACC,GAChBT,GAAQ,SAACU,GACL,OAAID,EACIC,IAAUL,EACHK,EAEJA,EAAQ,EAED,IAAVA,EACOA,EAEJA,EAAQ,CAEtB,GACJ,EAYDrE,qBAAU,WACNhB,IAAciB,MAAK,SAACC,GAChBoD,EAASpD,GACT2D,GAAW,EACd,GACJ,GAAE,IAEH,IAqBMS,EAhBgB,WAClB,IAAMC,EAAmBhG,EAAOiG,cAChC,OAAOnD,EAAM9C,QAAO,SAACkG,GAAD,OAChBA,EAAK3G,KAAK0G,cAAcE,SAASH,EADjB,GAGvB,CAWqBI,GAEtB,OACI,eAACC,GAAD,WACI,cAACvG,EAAD,CACImE,UAAU,SACVhE,aA3BS,SAACqG,GAjBD,IAACC,EAkBlBvB,EAAUsB,EAAEE,OAAO7G,OAhBfyF,GAFcmB,EAmBL,GAlBHd,EACEA,EACDc,EAAM,EACL,EAEAA,EAcf,EAyBWvG,OAAQA,EACRD,WAjBO,WACfmF,GAASD,GAEJA,EAILnC,EAAMmC,MAAK,SAACwB,EAAGC,GAAJ,OAAUA,EAAEnH,KAAKoH,cAAcF,EAAElH,KAAjC,IAHPuD,EAAMmC,MAAK,SAACwB,EAAGC,GAAJ,OAAUD,EAAElH,KAAKoH,cAAcD,EAAEnH,KAAjC,GAIlB,IAWQ8F,EACG,cAAC,EAAD,CACIvC,MAAOiD,EACPnD,WAAYA,EACZC,UAAWA,IAGf,cAACQ,EAAD,IAEJ,cAACQ,GAAD,CACIC,eAAgB,kBAAM8B,GAAW,EAAjB,EAChB7B,eAAgB,kBAAM6B,GAAW,EAAjB,MAI/B,CAED,IAAMS,GAAOzG,IAAOU,IAAV,shBCvGVsG,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAChC,GAAD,MAEJiC,SAASC,eAAe,Q","file":"static/js/main.96b520f6.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nimport styled from 'styled-components';\n\nexport default function Filter({ search, onChange }) {\n    return (\n        <Input\n            type=\"text\"\n            name=\"filter\"\n            placeholder=\"Search\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            value={search}\n            onChange={onChange}\n        />\n    );\n}\n\nconst Input = styled.input`\n    width: 248px;\n    height: 70px;\n    background: #333348;\n    border-radius: 40px;\n    padding: 20px 35px;\n    font-family: inherit;\n    color: #eee;\n    border: none;\n    cursor: pointer;\n    &::placeholder {\n        color: #eee;\n    }\n\n    @media screen and (max-width: 768px) {\n        margin-left: 20px;\n    }\n`;\n\nFilter.propTypes = {\n    search: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nimport Filter from './Filter';\n\nimport styled from 'styled-components';\n\nexport default function Header({ changeSort, filter, changeFilter, ...props }) {\n    return (\n        <HeaderEl {...props}>\n            <Text onClick={changeSort}>Sort </Text>\n            <Filter search={filter} onChange={changeFilter} />\n        </HeaderEl>\n    );\n}\n\nconst HeaderEl = styled.div`\n    width: 75%;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n\n    @media screen and (max-width: 768px) {\n        width: 75%;\n        justify-content: center;\n    }\n\n    @media screen and (max-width: 1000px) {\n        width: 450px;\n    }\n`;\nconst Text = styled.p`\n    cursor: pointer;\n    &:hover {\n        transform: scale(1.1);\n    }\n`;\n\nHeader.propTypes = {\n    changeSort: PropTypes.func.isRequired,\n    filter: PropTypes.string.isRequired,\n    changeFilter: PropTypes.func.isRequired,\n};\n","const API_URL = 'https://jsonplaceholder.typicode.com/users';\r\n\r\nexport { API_URL };\r\n","import { API_URL } from './config';\n\nconst getUserData = async () => {\n    const response = await fetch(API_URL);\n    return await response.json();\n};\n\nconst getUserPost = async (userId) => {\n    const response = await fetch(`${API_URL}/${userId}/posts`);\n    return await response.json();\n};\n\nexport { getUserData, getUserPost };\n","import { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport styled from 'styled-components';\n\nimport { getUserPost } from '../../services/api';\n\nexport default function CardItem({\n    id,\n    name,\n    email,\n    phone,\n    website,\n    onChange,\n}) {\n    const [userPost, setUserPost] = useState([]);\n    const [showPost, setShowPost] = useState(false);\n\n    useEffect(() => {\n        getUserPost(id).then((data) => setUserPost(data));\n    }, [id]);\n\n    const handleClick = () => {\n        setShowPost(!showPost);\n    };\n\n    return (\n        <>\n            <Card>\n                <p>{name}</p>\n                <p>{email}</p>\n                <p>{phone.split(' ')[0]}</p>\n                <p>{website}</p>\n                <Button\n                    type=\"button\"\n                    onClick={() => {\n                        handleClick();\n                        onChange(!showPost, userPost);\n                    }}\n                >\n                    {showPost ? 'Hide posts' : 'Show all posts '}\n                </Button>\n            </Card>\n        </>\n    );\n}\n\nconst Card = styled.li`\n    width: 250px;\n    height: 200px;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    background: #333348;\n    border-radius: 40px;\n    margin-top: 30px;\n\n    @media screen and (min-width: 768px) {\n        font-size: 14px;\n        width: 220px;\n        height: 220px;\n    }\n    @media screen and (min-width: 1000px) {\n        width: 220px;\n        height: 240px;\n    }\n\n    @media screen and (min-width: 1500px) {\n        width: 270px;\n        height: 220px;\n        font-size: 18px;\n    }\n`;\n\nconst Button = styled.button`\n    display: block;\n    background: #52519d;\n    border-radius: 40px;\n    padding: 16px 38px;\n    border: none;\n    color: inherit;\n    margin: 0 auto;\n    margin-top: 30px;\n    cursor: pointer;\n\n    @media screen and (min-width: 1000px) {\n        padding: 16px 15px;\n    }\n`;\n\nCardItem.propTypes = {\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    email: PropTypes.string.isRequired,\n    phone: PropTypes.string.isRequired,\n};\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport styled from 'styled-components';\n\nexport default function PostItem({ post }) {\n    const [showText, setShowText] = useState(false);\n    return (\n        <>\n            <Post>\n                <Title onClick={() => setShowText(!showText)}>\n                    {post.title}\n                </Title>\n                {showText ? <Text key={post.body}>{post.body}</Text> : null}\n            </Post>\n        </>\n    );\n}\n\nconst Post = styled.li`\n    position: relative;\n    cursor: pointer;\n    &:not(:last-child) {\n        margin-bottom: 60px;\n        &::after {\n            position: absolute;\n            content: '';\n            width: 100%;\n            height: 1px;\n            background: #4c4c6a;\n            margin-top: 30px;\n        }\n    }\n`;\n\nconst Title = styled.p`\n    font-weight: 600;\n    color: #fff;\n    text-align: center;\n\n    @media screen and (min-width: 1000px) {\n        font-size: 18px;\n    }\n    @media screen and (min-width: 1500px) {\n        font-size: auto;\n    }\n`;\n\nconst Text = styled.p`\n    color: #fff;\n    margin-top: 20px;\n    @media screen and (min-width: 1000px) {\n        font-size: 14px;\n    }\n    @media screen and (min-width: 1500px) {\n        font-size: 18px;\n    }\n`;\n\nPostItem.propTypes = {\n    post: PropTypes.object.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nimport PostItem from './PostItem';\n\nimport styled from 'styled-components';\n\nexport default function Post({ data, ...props }) {\n    return (\n        <>\n            {data && (\n                <Wrap>\n                    <PostsList {...props}>\n                        {data.map((post) => (\n                            <PostItem key={post.id} post={post} />\n                        ))}\n                    </PostsList>\n                </Wrap>\n            )}\n        </>\n    );\n}\n\nconst Wrap = styled.div`\n    background: #333348;\n    border-radius: 40px;\n    margin-left: 20px;\n    overflow: hidden;\n\n    @media screen and (min-width: 768px) {\n        width: 300px;\n    }\n\n    @media screen and (min-width: 1000px) {\n        width: 430px;\n    }\n\n    @media screen and (min-width: 1500px) {\n        width: 430px;\n    }\n`;\n\nconst PostsList = styled.ul`\n    &::-webkit-scrollbar {\n        width: 12px;\n    }\n\n    &::-webkit-scrollbar-track {\n        background: #52519d;\n    }\n\n    &::-webkit-scrollbar-thumb {\n        background-color: #12122d;\n        border-radius: 20px;\n        border: 3px solid #52519d;\n    }\n\n    @media screen and (min-width: 0px) {\n        width: 300px;\n        height: 500px;\n        overflow: hidden;\n        overflow-y: scroll;\n    }\n\n    @media screen and (min-width: 768px) {\n        padding: 10px;\n        width: 300px;\n        height: 500px;\n        overflow: hidden;\n        overflow-y: scroll;\n    }\n\n    @media screen and (min-width: 1000px) {\n        width: 430px;\n        padding: 30px 20px;\n    }\n\n    @media screen and (min-width: 1500px) {\n        padding: 50px 50px;\n        width: 100%;\n    }\n`;\n\nPost.propTypes = {\n    data: PropTypes.array.isRequired,\n};\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport CardItem from './CardItem';\nimport Post from '../Posts/Post';\n\nimport styled from 'styled-components';\n\nexport default function Card({ firstIndex, lastIndex, users }) {\n    const [show, setShow] = useState(false);\n    const [userPost, setUserPost] = useState([]);\n\n    const handleChange = (showPost, userPost) => {\n        setShow(showPost);\n        setUserPost(userPost);\n    };\n\n    return (\n        <>\n            {users && (\n                <UsersWrap>\n                    <ListUsers>\n                        {users\n                            .slice(firstIndex, lastIndex)\n                            .map(({ id, name, email, phone, website }) => (\n                                <CardItem\n                                    key={id}\n                                    id={id}\n                                    name={name}\n                                    email={email}\n                                    phone={phone}\n                                    website={website}\n                                    onChange={handleChange}\n                                />\n                            ))}\n                    </ListUsers>\n                    {show && <Post data={userPost} />}\n                </UsersWrap>\n            )}\n        </>\n    );\n}\n\nconst UsersWrap = styled.div`\n    margin-left: auto;\n    margin-right: auto;\n    min-height: 75%;\n    display: flex;\n    -webkit-box-pack: center;\n    justify-content: center;\n    -webkit-box-align: center;\n    align-items: center;\n\n    @media screen and (max-width: 768px) {\n        flex-direction: row;\n        justify-content: center;\n        min-height: 900px;\n        margin-left: 60px;\n    }\n`;\n\nconst ListUsers = styled.ul`\n    display: flex;\n    flex-wrap: wrap;\n    width: 300px;\n\n    @media screen and (min-width: 0px) {\n        margin-top: -50px;\n        justify-content: center;\n    }\n\n    @media screen and (min-width: 768px) {\n        width: 450px;\n        margin-top: 0;\n        justify-content: space-between;\n    }\n\n    @media screen and (min-width: 1500px) {\n        width: 570px;\n    }\n`;\n\nCardItem.propTypes = {\n    firstContentIndex: PropTypes.number,\n    lastContentIndex: PropTypes.number,\n    users: PropTypes.array,\n};\n","import styled from 'styled-components';\r\n\r\nexport default function Preloader() {\r\n    return <Loader></Loader>;\r\n}\r\n\r\nconst Loader = styled.div`\r\n    margin-top: 100px;\r\n    margin-right: auto;\r\n    margin-left: auto;\r\n    border: 16px solid #f3f3f3;\r\n    border-top: 16px solid #3498db;\r\n    border-radius: 50%;\r\n    width: 100px;\r\n    height: 100px;\r\n    animation: spin 2s linear infinite;\r\n\r\n    @keyframes spin {\r\n        0% {\r\n            transform: rotate(0deg);\r\n        }\r\n        100% {\r\n            transform: rotate(360deg);\r\n        }\r\n    }\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/Vector.43eacf0c.svg\";","import PropTypes from 'prop-types';\r\n\r\nimport Arrow from '../../img/Vector.svg';\r\n\r\nimport styled from 'styled-components';\r\n\r\nexport default function Footer({ changePageNext, changePagePrev }) {\r\n    return (\r\n        <FooterEl>\r\n            <div onClick={changePageNext} className=\"page\">\r\n                <img\r\n                    src={Arrow}\r\n                    alt=\"arrow\"\r\n                    style={{ marginRight: '30px' }}\r\n                    width=\"18px\"\r\n                    height=\"36px\"\r\n                    stroke=\"#eee\"\r\n                    fill=\"transparent\"\r\n                    iconname=\"icon-prev\"\r\n                />\r\n                Previous\r\n            </div>\r\n\r\n            <div onClick={changePagePrev} className=\"page\">\r\n                Next\r\n                <img\r\n                    src={Arrow}\r\n                    alt=\"arrow\"\r\n                    style={{ marginLeft: '30px', transform: 'rotate(0.5turn)' }}\r\n                    width=\"18px\"\r\n                    height=\"36px\"\r\n                    stroke=\"#eee\"\r\n                    fill=\"transparent\"\r\n                    iconname=\"icon-next\"\r\n                />\r\n            </div>\r\n        </FooterEl>\r\n    );\r\n}\r\n\r\nconst FooterEl = styled.div`\r\n    width: 75%;\r\n    bottom: 50px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n\r\n    .page {\r\n        display: flex;\r\n        align-items: center;\r\n        cursor: pointer;\r\n    }\r\n\r\n    @media screen and (min-width: 0px) {\r\n        margin-left: 80px;\r\n    }\r\n\r\n    @media screen and (min-width: 768px) {\r\n        margin-left: auto;\r\n        margin-right: auto;\r\n        width: 450px;\r\n    }\r\n\r\n    @media screen and (min-width: 1000px) {\r\n        width: 75%;\r\n    }\r\n\r\n    @media screen and (min-width: 1500px) {\r\n        width: 75%;\r\n    }\r\n`;\r\n\r\nFooter.propTypes = {\r\n    changePageNext: PropTypes.func.isRequired,\r\n    changePagePrev: PropTypes.func.isRequired,\r\n};\r\n","import React, { useEffect, useState } from 'react';\n\nimport Header from './components/Header/Header';\nimport Card from './components/Cards/Card';\nimport Preloader from './components/Preloader/Preloader';\nimport Footer from './components/Footer/Footer';\n\nimport 'modern-normalize/modern-normalize.css';\nimport styled from 'styled-components';\nimport './index.css';\n\nimport { getUserData } from './services/api';\n\nexport default function App() {\n    const [users, setUsers] = useState([]);\n    const [filter, setFilter] = useState('');\n    const [sort, setSort] = useState(false);\n    const [page, setPage] = useState(1);\n    const [loading, setLoading] = useState(false);\n\n    const countPage = 4;\n    const count = users.length;\n\n    const pageCount = Math.ceil(count / countPage);\n    const lastIndex = page * countPage;\n    const firstIndex = lastIndex - countPage;\n\n    const changePage = (direction) => {\n        setPage((state) => {\n            if (direction) {\n                if (state === pageCount) {\n                    return state;\n                }\n                return state + 1;\n            } else {\n                if (state === 1) {\n                    return state;\n                }\n                return state - 1;\n            }\n        });\n    };\n\n    const setPageCount = (num) => {\n        if (num > pageCount) {\n            setPage(pageCount);\n        } else if (num < 1) {\n            setPage(1);\n        } else {\n            setPage(num);\n        }\n    };\n\n    useEffect(() => {\n        getUserData().then((data) => {\n            setUsers(data);\n            setLoading(true);\n        });\n    }, []);\n\n    const changeFilter = (e) => {\n        setFilter(e.target.value);\n        setPageCount(1);\n    };\n\n    const filteredUsers = () => {\n        const normalizedFilter = filter.toLowerCase();\n        return users.filter((user) =>\n            user.name.toLowerCase().includes(normalizedFilter)\n        );\n    };\n\n    const changeSort = () => {\n        setSort(!sort);\n\n        if (!sort) {\n            users.sort((a, b) => a.name.localeCompare(b.name));\n            return;\n        }\n        users.sort((a, b) => b.name.localeCompare(a.name));\n    };\n    const usersFiltered = filteredUsers();\n\n    return (\n        <Body>\n            <Header\n                className=\"header\"\n                changeFilter={changeFilter}\n                filter={filter}\n                changeSort={changeSort}\n            />\n            {loading ? (\n                <Card\n                    users={usersFiltered}\n                    firstIndex={firstIndex}\n                    lastIndex={lastIndex}\n                />\n            ) : (\n                <Preloader />\n            )}\n            <Footer\n                changePageNext={() => changePage(false)}\n                changePagePrev={() => changePage(true)}\n            />\n        </Body>\n    );\n}\n\nconst Body = styled.div`\n    width: 350px;\n    height: 100vh;\n    padding-top: 20px;\n    margin-left: auto;\n    margin-right: auto;\n    display: flex;\n    flex-direction: column;\n\n    @media screen and (min-width: 768px) {\n        width: 750px;\n    }\n\n    @media screen and (min-width: 1000px) {\n        width: 1000px;\n    }\n\n    @media screen and (min-width: 1500px) {\n        width: 1470px;\n    }\n\n    .header {\n        margin-bottom: 20px;\n        margin-right: auto;\n        margin-left: auto;\n    }\n`;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}